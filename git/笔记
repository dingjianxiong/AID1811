GIT 代码协同管理工具

代码管理工具作用：
    １、防止代码丢失，做代码备份
    ２、代码的版本控制，可以设置多个节点，在多个版本间切换
    ３、可以方便团队开发，更好的做代码管理
    ４、可以方便产品迭代

什么是git？
    Git是一个免费的开源分布式版本控制系统，可用于快速高效的管理大小项目。

分布式和集中式
    分布式：每个节点都保存完整代码，没有明确的中央服务器，节点之间相互推送共享代码
    集中式：代码由中央服务端集中管理，为每个节点分配权限，每个节点统一上传的到中央服务器，或从服务器下载
git 特点
    *git可以管理各种文件，特别是代码项目，多在*nix系统使用
    *git是分布式，不同于svn的集中式，这是git和svn的最大差别
    *git是开源系统，可以脱网使用，数据传输速度快
    *git更好的支持分支协作，分布式代码更安全
git安装
    sudo apt-get instll git

git配置命令
    git config
    配置级别
        １、系统中所有用户都可以使用该配置
            命令：git config --system
            配置文件：/etc/gitconfig
        ２、当前用户可使用该配置
            命令：git config --global
            配置文件：~/.gitconfig
        ３、当前项目可使用该配置，必须在项目目录下执行
            命令：git config
            配置文件：project/.git/config
配置内容：
    １、配置用户名
        配置用户名为tedu
            git config --global user.name tedu
        在当前目录下查看配置的用户名：
            cat ~/.gitconfig
    ２、配置邮箱
        配置邮箱
            sudo git config --system user.email djx@tedu.cn
        查看邮箱名
            cat /etc/gitconfig
    ３、配置编译器
        命令：git config core.editor vacode
    ４、查看项目配置
        命令：git config --list
git 的基本命令
    １、初始化仓库
        git init
            *在某个目录下初始化仓库后自动产生.git目录，该目录下的所有文件都可以使用git管理

            工作区：用于用户对项目文档的各种直接操作，即项目目录操作
            暂存区：用于记录用户对工作区的各种修改，以便同步到本地仓库中
            git仓库：用于存储备份工作区的内容，方便git进行管理
    ２、查看分支状态
        git status
        分支：在git仓库中一个独立的工作环境，不影响其他分支操作。git仓库初始工作分支为master。
    ３、文件提交到暂存区
        git add [文件]
            git add *:把所有文件提交到暂存区
        *可以一次提交多个文件或者单个文件，或者*表示所有文件。（隐藏文件必须指明，不能用*）
        *提交内容可以是普通文件也可以是目录
        *暂存区只是做工作区的提交修改记录，并不是将文件备份存储
        git rm --cached [文件／目录]
    ４、将文件同步到本地git仓库
        git commit -m 'some message'
            *同步要添加说明，只能同步已提交到暂存区的内容
        git checkout --[文件]
            *将文件恢复到工作区
    ５、查看commit日志
        git log

        查看日志id
            git log --pretty=oneline
    ６、查看本地文件和仓库文件差异
        git diff [file]
    ７、从仓库恢复文件到工作区
        git checkout [文件]
    
