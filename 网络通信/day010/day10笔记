from gevent import monkey

monkey.patch_all()
功能：运行monkey脚本，使程序中阻塞行为可以被gevent捕获
    *脚本的运行必须在模块导入之前
项目练习
电子词典
    功能说明：
        １、用户可以注册登录（登录需要凭借用户名密码，注册要求用户必须填写用户名密码，其他内容自定
            用户名要求不能重复）
        ２、用户信息需要长期保存，满足随时登录需要
            所有信息需要保存数据使用mysql
        ３、能够满足多用户同时操作需要，
        ４、项目分为客户端和服务端
            客户端负责发起请求和结果展示，其他处理功能由服务器完成
        ５、客户端启动即进入一级界面（print打印）功能有：
            登录　　注册　　退出
            注册后可以回到登录界面，也可以直接登录
        ６、用户登录后进入二级界面，功能：
            查单词　　查看历史记录　　　注销
            查单词：可以循环输入单词，返回单词解释
                提示： 
                    １、每个单词占一行
                    ２、单词是按照顺序排列的
                    ３、单词和解析之间一定有空格
                *可以用单词本直接查询，也可以先存入数据库
            历史记录：用户可以查看自己的查询记录
                格式：name   word   time
                        用户　　查询的词　　查询时间
                * 可以显示所有记录，也可以给最近１０个记录
            注销：回到一级界面
    １、确定技术点
        用什么（多进程并发）
        用什么套接字、tcp
        用什么数据库 mysql
        查询：文件处理还是数据库查询？
        　　　登录　　查询记录？
    ２、建立数据库，设计数据库
     create table user (
         id int primary key auto_increment,
         name varchar(32) not null,
         passwd varchar(16) default '000000');

    create table hist(
        id int primary key auto_increment,
        name varchar(32) not null,
        word varchar(32) not null,
        time varchar(64));
    
    create table words(
        id int primary key auto_increment,
        word varchar(32) not null,
        interpret text)default charset=utf8;

        几个表　２个表（用户信息表、查询表）
        表结构　查询：单词　　解释
        表关系　
    ３、将数据（单词本）存入数据表
    ４、结构设计
        做什么样的封装
            函数封装
        流程：
            服务端：创建套接字
                    创建父子进程：子进程处理客户端请求，父进程等待下一个客户端连接
                            编写子进程处理具体请求
            客户端：
                    创建套接字-->发起连接请求-->进入一级界面
                        -->发起请求-->登录后进入二级界面-->发起请求


    ５、完成编程流程
        １、完成网络通信
        ２、逐个功能实现
            注册：
                客户端
                    １、输入注册信息
                    ２、将信息发送给服务器
                    ３、等待服务器反馈
                服务端
                    １、接收请求
                    ２、判断是否可以注册
                    ３、将结果反馈给客户端
                    ４、将注册用户信息加入到数据库
            登录：
                客户端
                    １、输入用户名，密码发送给服务端
                    ２、等待服务器的反馈
                    ３、如果成功就进入二级菜单，失败反馈失败结果
                服务端
                    １、接收客户端的信息
                    ２、在数据库中判断
                    ３、返回结果
            查词：
                客户端：
                    １、发送消息
                    ２、接收返回结果
                    ３、＃＃表示结束查词
                服务端：
                    １、接收请求
                    ２、查找单词（文本查找、数据库查找）
                    ３、反馈结果
                    ４、插入历史记录
            查询历史记录
                客户端
                    １、发送请求
                    ２、接收反馈
                服务端
                    １、接收请求
                    ２、获取历史记录
                    ３、发送给客户端（发送所有？还是１０条）

                    
cookie:
    import getpass
    passwd=getpass.getpass()
    功能：隐式的输入密码
作业：
    １、整理进程线程网络内容
    ２、复习mysql
周二：
    １、将电子词典剩下的功能整理完，然后整理
    ２、中期项目